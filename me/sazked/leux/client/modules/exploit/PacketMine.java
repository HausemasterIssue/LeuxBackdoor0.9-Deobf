// 
// Decompiled by Procyon v0.5.36
// 

package me.sazked.leux.client.modules.exploit;

import net.minecraft.block.state.IBlockState;
import net.minecraft.world.World;
import net.minecraft.util.math.BlockPos;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketPlayerDigging;
import net.minecraft.util.EnumHand;
import java.util.function.Predicate;
import me.sazked.leux.client.modules.Category;
import me.zero.alpine.fork.listener.EventHandler;
import me.sazked.leux.client.event.events.EventDamageBlock;
import me.zero.alpine.fork.listener.Listener;
import me.sazked.leux.client.modules.Module;

public class PacketMine extends Module
{
    @EventHandler
    public Listener<EventDamageBlock> on_damage_block;
    
    public PacketMine() {
        super(Category.exploit);
        this.on_damage_block = new Listener<EventDamageBlock>(this::lambda$new$0, (Predicate<EventDamageBlock>[])new Predicate[0]);
        this.name = "Packet Mine";
        this.tag = "PacketMine";
        this.description = "using packets to mine";
    }
    
    public void lambda$new$0(final EventDamageBlock obf) {
        if (!this.can_break(obf.getPos())) {
            return;
        }
        PacketMine.mc.player.swingArm(EnumHand.MAIN_HAND);
        PacketMine.mc.player.connection.sendPacket((Packet)new CPacketPlayerDigging(CPacketPlayerDigging.Action.START_DESTROY_BLOCK, obf.getPos(), obf.getDirection()));
        PacketMine.mc.player.connection.sendPacket((Packet)new CPacketPlayerDigging(CPacketPlayerDigging.Action.STOP_DESTROY_BLOCK, obf.getPos(), obf.getDirection()));
        obf.cancel();
    }
    
    public boolean can_break(final BlockPos blockPos) {
        final IBlockState blockState = PacketMine.mc.world.getBlockState(blockPos);
        return blockState.getBlock().getBlockHardness(blockState, (World)PacketMine.mc.world, blockPos) != -1.0f;
    }
}
