// 
// Decompiled by Procyon v0.5.36
// 

package me.sazked.leux.client.modules.exploit;

import java.util.HashMap;
import me.sazked.leux.client.modules.Category;
import java.util.Iterator;
import net.minecraft.item.ItemStack;
import java.util.Map;
import net.minecraft.network.play.client.CPacketPlayerTryUseItem;
import net.minecraft.util.EnumHand;
import net.minecraft.util.math.BlockPos;
import net.minecraft.network.play.client.CPacketPlayerDigging;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.init.Items;
import me.sazked.leux.client.guiscreen.settings.Setting;
import me.sazked.leux.client.modules.Module;

public class PacketXP extends Module
{
    public Setting armor_percent;
    public Setting disable;
    public Setting auto_switch;
    
    @Override
    public void update() {
        if (!PacketXP.mc.player.isSprinting()) {
            if (PacketXP.mc.player.onGround && PacketXP.mc.player.inventory.getCurrentItem().getItem() == Items.EXPERIENCE_BOTTLE) {
                if (!this.is_damaged()) {
                    if (this.disable.get_value(true)) {
                        this.set_disable();
                    }
                    return;
                }
                PacketXP.mc.player.connection.sendPacket((Packet)new CPacketPlayer.Rotation(Float.intBitsToFloat(Float.floatToIntBits(1.2614015E37f) ^ 0x7D17D5EF), Float.intBitsToFloat(Float.floatToIntBits(0.067691654f) ^ 0x7F3EA1EC), true));
                PacketXP.mc.player.connection.sendPacket((Packet)new CPacketPlayerDigging(CPacketPlayerDigging.Action.RELEASE_USE_ITEM, BlockPos.ORIGIN, PacketXP.mc.player.getHorizontalFacing()));
                PacketXP.mc.player.connection.sendPacket((Packet)new CPacketPlayerTryUseItem(EnumHand.MAIN_HAND));
            }
        }
        if (PacketXP.mc.player.getHeldItemOffhand().getItem() == Items.EXPERIENCE_BOTTLE || PacketXP.mc.player.getHeldItemMainhand().getItem() == Items.EXPERIENCE_BOTTLE || !this.auto_switch.get_value(true)) {
            return;
        }
        if (this.find_xp_hotbar() == -1) {
            return;
        }
        if (this.is_damaged()) {
            PacketXP.mc.player.inventory.currentItem = this.find_xp_hotbar();
        }
    }
    
    public Map<Integer, ItemStack> get_armor() {
        return this.get_inv_slots(5);
    }
    
    public boolean is_damaged() {
        for (final Map.Entry<Integer, ItemStack> obf : this.get_armor().entrySet()) {
            if (obf.getValue().isEmpty()) {
                continue;
            }
            final ItemStack obf2 = obf.getValue();
            final double obf3 = obf2.getMaxDamage();
            final double obf4 = obf2.getMaxDamage() - obf2.getItemDamage();
            final double obf5 = obf4 / obf3 * Double.longBitsToDouble(Double.doubleToLongBits(0.08786408733114419) ^ 0x7FEF7E42C59484DBL);
            if (obf5 >= this.armor_percent.get_value(1)) {
                continue;
            }
            return true;
        }
        return false;
    }
    
    public PacketXP() {
        super(Category.exploit);
        this.armor_percent = this.create("Armor %", "PXPArmorPercent", 80, 0, 100);
        this.auto_switch = this.create("Auto Switch", "PXPAutoSwitch", false);
        this.disable = this.create("Disable When Full", "PXPDisable", true);
        this.name = "Packet XP";
        this.tag = "PacketXP";
        this.description = "cool you don't waste xp :0";
    }
    
    public Map<Integer, ItemStack> get_inv_slots(int obf) {
        final HashMap<Integer, ItemStack> obf2 = new HashMap<Integer, ItemStack>();
        while (obf <= 8) {
            obf2.put(obf, (ItemStack)PacketXP.mc.player.inventoryContainer.getInventory().get(obf));
            ++obf;
        }
        return obf2;
    }
    
    public int find_xp_hotbar() {
        for (int i = 0; i < 9; ++i) {
            if (PacketXP.mc.player.inventory.getStackInSlot(i).getItem() == Items.EXPERIENCE_BOTTLE) {
                return i;
            }
        }
        return -1;
    }
}
